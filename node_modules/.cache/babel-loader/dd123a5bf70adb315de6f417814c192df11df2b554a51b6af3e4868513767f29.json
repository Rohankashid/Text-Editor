{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\text-editor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [elements, setElements] = useState([{\n    id: Date.now(),\n    text: \"Double-click to edit\",\n    x: 100,\n    y: 100,\n    fontSize: 16,\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontFamily: \"Arial\",\n    contentEditable: false // Set initial contenteditable to false\n  }]);\n  const [selectedElement, setSelectedElement] = useState(null);\n\n  // Toggle contentEditable on double-click\n  const handleDoubleClick = id => {\n    const updatedElements = elements.map(el => el.id === id ? {\n      ...el,\n      contentEditable: true\n    } : el);\n    setElements(updatedElements);\n    setSelectedElement(id); // Mark the element as selected\n  };\n\n  // Handle text change while editing\n  const handleTextChange = (id, e) => {\n    const updatedElements = elements.map(el => el.id === id ? {\n      ...el,\n      text: e.target.innerText\n    } : el);\n    setElements(updatedElements);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas\",\n      children: elements.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-element\",\n        style: {\n          position: \"absolute\",\n          left: el.x,\n          top: el.y,\n          fontSize: el.fontSize,\n          fontStyle: el.fontStyle,\n          fontWeight: el.fontWeight,\n          fontFamily: el.fontFamily\n        },\n        draggable: true,\n        contentEditable: el.contentEditable,\n        onDoubleClick: () => handleDoubleClick(el.id),\n        onBlur: () => {\n          const updatedElements = elements.map(elem => elem.id === el.id ? {\n            ...elem,\n            contentEditable: false\n          } : elem);\n          setElements(updatedElements);\n          setSelectedElement(null); // Deselect after editing\n        },\n        onInput: e => handleTextChange(el.id, e),\n        children: el.text\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zZQMR2WaADc8bD3cD8nrngw67WA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","elements","setElements","id","Date","now","text","x","y","fontSize","fontStyle","fontWeight","fontFamily","contentEditable","selectedElement","setSelectedElement","handleDoubleClick","updatedElements","map","el","handleTextChange","e","target","innerText","className","children","style","position","left","top","draggable","onDoubleClick","onBlur","elem","onInput","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/text-editor/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nfunction App() {\r\n  const [elements, setElements] = useState([\r\n    {\r\n      id: Date.now(),\r\n      text: \"Double-click to edit\",\r\n      x: 100,\r\n      y: 100,\r\n      fontSize: 16,\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"normal\",\r\n      fontFamily: \"Arial\",\r\n      contentEditable: false, // Set initial contenteditable to false\r\n    }\r\n  ]);\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n\r\n  // Toggle contentEditable on double-click\r\n  const handleDoubleClick = (id) => {\r\n    const updatedElements = elements.map((el) =>\r\n      el.id === id ? { ...el, contentEditable: true } : el\r\n    );\r\n    setElements(updatedElements);\r\n    setSelectedElement(id); // Mark the element as selected\r\n  };\r\n\r\n  // Handle text change while editing\r\n  const handleTextChange = (id, e) => {\r\n    const updatedElements = elements.map((el) =>\r\n      el.id === id ? { ...el, text: e.target.innerText } : el\r\n    );\r\n    setElements(updatedElements);\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor\">\r\n      <div className=\"canvas\">\r\n        {elements.map((el) => (\r\n          <div\r\n            key={el.id}\r\n            className=\"text-element\"\r\n            style={{\r\n              position: \"absolute\",\r\n              left: el.x,\r\n              top: el.y,\r\n              fontSize: el.fontSize,\r\n              fontStyle: el.fontStyle,\r\n              fontWeight: el.fontWeight,\r\n              fontFamily: el.fontFamily,\r\n            }}\r\n            draggable\r\n            contentEditable={el.contentEditable}\r\n            onDoubleClick={() => handleDoubleClick(el.id)}\r\n            onBlur={() => {\r\n              const updatedElements = elements.map((elem) =>\r\n                elem.id === el.id ? { ...elem, contentEditable: false } : elem\r\n              );\r\n              setElements(updatedElements);\r\n              setSelectedElement(null); // Deselect after editing\r\n            }}\r\n            onInput={(e) => handleTextChange(el.id, e)}\r\n          >\r\n            {el.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}