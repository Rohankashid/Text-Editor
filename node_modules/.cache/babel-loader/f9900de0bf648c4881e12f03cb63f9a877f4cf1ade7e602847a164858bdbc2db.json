{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Text-Editor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [elements, setElements] = useState([]);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const addTextElement = () => {\n    const newElement = {\n      id: Date.now(),\n      text: \"Double-click to edit\",\n      x: 100,\n      y: 100,\n      fontSize: 16,\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      fontFamily: \"Arial\",\n      width: 150,\n      // Initial width\n      height: 30 // Initial height\n    };\n    setElements([...elements, newElement]);\n  };\n  const updateElement = (id, newProps) => {\n    setElements(prevElements => prevElements.map(el => el.id === id ? {\n      ...el,\n      ...newProps\n    } : el));\n  };\n  const handleDrag = (id, e) => {\n    const rect = e.target.getBoundingClientRect();\n    const x = e.clientX - rect.width / 2;\n    const y = e.clientY - rect.height / 2;\n    updateElement(id, {\n      x,\n      y\n    });\n  };\n  const handleResize = (id, e) => {\n    const element = e.target;\n\n    // Get the new dimensions\n    const newWidth = element.offsetWidth;\n    const newHeight = element.offsetHeight;\n\n    // Update the element dimensions in state\n    setElements(prevElements => prevElements.map(el => el.id === id ? {\n      ...el,\n      width: newWidth,\n      height: newHeight\n    } : el));\n  };\n  const handleTextChange = (id, e) => {\n    const textElement = e.target;\n    const newText = textElement.innerText;\n    setElements(prevElements => prevElements.map(el => el.id === id ? {\n      ...el,\n      text: newText\n    } : el));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTextElement,\n        children: \"Add Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas\",\n      children: elements.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-element ${selectedElement === el.id ? \"editing\" : \"\"}`,\n        style: {\n          position: \"absolute\",\n          left: el.x,\n          top: el.y,\n          fontSize: el.fontSize,\n          fontStyle: el.fontStyle,\n          fontWeight: el.fontWeight,\n          fontFamily: el.fontFamily,\n          width: `${el.width}px`,\n          height: `${el.height}px`,\n          minWidth: \"150px\",\n          minHeight: \"30px\"\n        },\n        draggable: true,\n        onDragStart: e => e.dataTransfer.setData(\"text/plain\", el.id),\n        onDragEnd: e => handleDrag(el.id, e),\n        onMouseUp: e => handleResize(el.id, e) // Handle resizing on mouse up\n        ,\n        onDoubleClick: () => setSelectedElement(el.id),\n        onBlur: () => setSelectedElement(null),\n        contentEditable: selectedElement === el.id,\n        onInput: e => handleTextChange(el.id, e),\n        children: el.text\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"onkilFoSOLJA59wuwAU73BaVkVY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","elements","setElements","selectedElement","setSelectedElement","addTextElement","newElement","id","Date","now","text","x","y","fontSize","fontStyle","fontWeight","fontFamily","width","height","updateElement","newProps","prevElements","map","el","handleDrag","e","rect","target","getBoundingClientRect","clientX","clientY","handleResize","element","newWidth","offsetWidth","newHeight","offsetHeight","handleTextChange","textElement","newText","innerText","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","position","left","top","minWidth","minHeight","draggable","onDragStart","dataTransfer","setData","onDragEnd","onMouseUp","onDoubleClick","onBlur","contentEditable","onInput","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Text-Editor/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nfunction App() {\r\n  const [elements, setElements] = useState([]);\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n\r\n  const addTextElement = () => {\r\n    const newElement = {\r\n      id: Date.now(),\r\n      text: \"Double-click to edit\",\r\n      x: 100,\r\n      y: 100,\r\n      fontSize: 16,\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"normal\",\r\n      fontFamily: \"Arial\",\r\n      width: 150, // Initial width\r\n      height: 30, // Initial height\r\n    };\r\n    setElements([...elements, newElement]);\r\n  };\r\n\r\n  const updateElement = (id, newProps) => {\r\n    setElements((prevElements) =>\r\n      prevElements.map((el) =>\r\n        el.id === id ? { ...el, ...newProps } : el\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleDrag = (id, e) => {\r\n    const rect = e.target.getBoundingClientRect();\r\n    const x = e.clientX - rect.width / 2;\r\n    const y = e.clientY - rect.height / 2;\r\n    updateElement(id, { x, y });\r\n  };\r\n\r\n  const handleResize = (id, e) => {\r\n    const element = e.target;\r\n\r\n    // Get the new dimensions\r\n    const newWidth = element.offsetWidth;\r\n    const newHeight = element.offsetHeight;\r\n\r\n    // Update the element dimensions in state\r\n    setElements((prevElements) =>\r\n      prevElements.map((el) =>\r\n        el.id === id ? { ...el, width: newWidth, height: newHeight } : el\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleTextChange = (id, e) => {\r\n    const textElement = e.target;\r\n    const newText = textElement.innerText;\r\n\r\n    setElements((prevElements) =>\r\n      prevElements.map((el) =>\r\n        el.id === id ? { ...el, text: newText } : el\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor\">\r\n      <div className=\"toolbar\">\r\n        <button onClick={addTextElement}>Add Text</button>\r\n      </div>\r\n      <div className=\"canvas\">\r\n        {elements.map((el) => (\r\n          <div\r\n            key={el.id}\r\n            className={`text-element ${\r\n              selectedElement === el.id ? \"editing\" : \"\"\r\n            }`}\r\n            style={{\r\n              position: \"absolute\",\r\n              left: el.x,\r\n              top: el.y,\r\n              fontSize: el.fontSize,\r\n              fontStyle: el.fontStyle,\r\n              fontWeight: el.fontWeight,\r\n              fontFamily: el.fontFamily,\r\n              width: `${el.width}px`,\r\n              height: `${el.height}px`,\r\n              minWidth: \"150px\",\r\n              minHeight: \"30px\",\r\n            }}\r\n            draggable\r\n            onDragStart={(e) => e.dataTransfer.setData(\"text/plain\", el.id)}\r\n            onDragEnd={(e) => handleDrag(el.id, e)}\r\n            onMouseUp={(e) => handleResize(el.id, e)} // Handle resizing on mouse up\r\n            onDoubleClick={() => setSelectedElement(el.id)}\r\n            onBlur={() => setSelectedElement(null)}\r\n            contentEditable={selectedElement === el.id}\r\n            onInput={(e) => handleTextChange(el.id, e)}\r\n          >\r\n            {el.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}