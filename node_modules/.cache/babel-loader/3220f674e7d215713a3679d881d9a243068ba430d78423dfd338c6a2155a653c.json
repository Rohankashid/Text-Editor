{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Text-Editor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _elements$find, _elements$find2, _elements$find3, _elements$find4;\n  const [elements, setElements] = useState([]);\n  const [selectedElement, setSelectedElement] = useState(null);\n\n  // Default toolbar settings\n  const [toolbarSettings, setToolbarSettings] = useState({\n    fontSize: 16,\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontFamily: \"Arial\"\n  });\n  const addTextElement = () => {\n    const newElement = {\n      id: Date.now(),\n      text: \"Double-click to edit\",\n      x: 100,\n      y: 100,\n      fontSize: toolbarSettings.fontSize,\n      fontStyle: toolbarSettings.fontStyle,\n      fontWeight: toolbarSettings.fontWeight,\n      fontFamily: toolbarSettings.fontFamily,\n      width: 150,\n      height: 30,\n      textHistory: [{\n        text: \"Double-click to edit\",\n        fontSize: toolbarSettings.fontSize,\n        fontStyle: toolbarSettings.fontStyle,\n        fontWeight: toolbarSettings.fontWeight,\n        fontFamily: toolbarSettings.fontFamily\n      }],\n      historyIndex: 0\n    };\n    setElements([...elements, newElement]);\n  };\n  const updateElement = (id, newProps) => {\n    setElements(prevElements => prevElements.map(el => el.id === id ? {\n      ...el,\n      ...newProps\n    } : el));\n  };\n  const handleToolbarChange = (key, value) => {\n    // Update toolbar settings\n    setToolbarSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n\n    // Apply changes to the selected element if any\n    if (selectedElement) {\n      updateElement(selectedElement, {\n        [key]: value\n      });\n    }\n  };\n  const handleDrag = (id, e) => {\n    const rect = e.target.getBoundingClientRect();\n    const x = e.clientX - rect.width / 2;\n    const y = e.clientY - rect.height / 2;\n    updateElement(id, {\n      x,\n      y\n    });\n  };\n  const handleResize = (id, e) => {\n    const element = e.target;\n    const newWidth = element.offsetWidth;\n    const newHeight = element.offsetHeight;\n    setElements(prevElements => prevElements.map(el => el.id === id ? {\n      ...el,\n      width: newWidth,\n      height: newHeight\n    } : el));\n  };\n  const handleTextChange = (id, e) => {\n    const textElement = e.target;\n    const newText = textElement.innerText;\n    setElements(prevElements => prevElements.map(el => {\n      if (el.id === id) {\n        const newHistory = [...el.textHistory.slice(0, el.historyIndex + 1), {\n          text: newText,\n          fontSize: el.fontSize,\n          fontFamily: el.fontFamily,\n          fontStyle: el.fontStyle,\n          fontWeight: el.fontWeight\n        }];\n        return {\n          ...el,\n          text: newText,\n          textHistory: newHistory,\n          historyIndex: newHistory.length - 1\n        };\n      }\n      return el;\n    }));\n  };\n  const undo = () => {\n    if (selectedElement !== null) {\n      setElements(prevElements => prevElements.map(el => {\n        if (el.id === selectedElement && el.historyIndex > 0) {\n          const newIndex = el.historyIndex - 1;\n          const previousState = el.textHistory[newIndex];\n          return {\n            ...el,\n            text: previousState.text,\n            fontSize: previousState.fontSize,\n            fontFamily: previousState.fontFamily,\n            fontStyle: previousState.fontStyle,\n            fontWeight: previousState.fontWeight,\n            historyIndex: newIndex\n          };\n        }\n        return el;\n      }));\n    }\n  };\n  const redo = () => {\n    if (selectedElement !== null) {\n      setElements(prevElements => prevElements.map(el => {\n        if (el.id === selectedElement && el.historyIndex < el.textHistory.length - 1) {\n          const newIndex = el.historyIndex + 1;\n          const nextState = el.textHistory[newIndex];\n          return {\n            ...el,\n            text: nextState.text,\n            fontSize: nextState.fontSize,\n            fontFamily: nextState.fontFamily,\n            fontStyle: nextState.fontStyle,\n            fontWeight: nextState.fontWeight,\n            historyIndex: newIndex\n          };\n        }\n        return el;\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTextElement,\n        children: \"Add Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: undo,\n        disabled: !selectedElement,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: redo,\n        disabled: !selectedElement,\n        children: \"Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Font Size:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: selectedElement ? ((_elements$find = elements.find(el => el.id === selectedElement)) === null || _elements$find === void 0 ? void 0 : _elements$find.fontSize) || \"\" : toolbarSettings.fontSize,\n          onChange: e => handleToolbarChange(\"fontSize\", parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Font Style:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedElement ? ((_elements$find2 = elements.find(el => el.id === selectedElement)) === null || _elements$find2 === void 0 ? void 0 : _elements$find2.fontStyle) || \"\" : toolbarSettings.fontStyle,\n          onChange: e => handleToolbarChange(\"fontStyle\", e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"normal\",\n            children: \"Normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"italic\",\n            children: \"Italic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Font Weight:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedElement ? ((_elements$find3 = elements.find(el => el.id === selectedElement)) === null || _elements$find3 === void 0 ? void 0 : _elements$find3.fontWeight) || \"\" : toolbarSettings.fontWeight,\n          onChange: e => handleToolbarChange(\"fontWeight\", e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"normal\",\n            children: \"Normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bold\",\n            children: \"Bold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Font Family:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedElement ? ((_elements$find4 = elements.find(el => el.id === selectedElement)) === null || _elements$find4 === void 0 ? void 0 : _elements$find4.fontFamily) || \"\" : toolbarSettings.fontFamily,\n          onChange: e => handleToolbarChange(\"fontFamily\", e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Arial\",\n            children: \"Arial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Times New Roman\",\n            children: \"Times New Roman\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Georgia\",\n            children: \"Georgia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Courier New\",\n            children: \"Courier New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Verdana\",\n            children: \"Verdana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Tahoma\",\n            children: \"Tahoma\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Comic Sans MS\",\n            children: \"Comic Sans MS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Cursive\",\n            children: \"Cursive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Monospace\",\n            children: \"Monospace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas\",\n      children: elements.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-element ${selectedElement === el.id ? \"editing\" : \"\"}`,\n        style: {\n          position: \"absolute\",\n          left: el.x,\n          top: el.y,\n          fontSize: el.fontSize,\n          fontStyle: el.fontStyle,\n          fontWeight: el.fontWeight,\n          fontFamily: el.fontFamily,\n          width: `${el.width}px`,\n          height: `${el.height}px`,\n          minWidth: \"150px\",\n          minHeight: \"30px\"\n        },\n        draggable: true,\n        onDragStart: e => e.dataTransfer.setData(\"text/plain\", el.id),\n        onDragEnd: e => handleDrag(el.id, e),\n        onMouseUp: e => handleResize(el.id, e),\n        onDoubleClick: () => setSelectedElement(el.id),\n        onBlur: () => setSelectedElement(null),\n        contentEditable: selectedElement === el.id,\n        onInput: e => handleTextChange(el.id, e),\n        children: el.text\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8JRnPw9lNO7qZsQUtg59GEVeQtY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","_elements$find","_elements$find2","_elements$find3","_elements$find4","elements","setElements","selectedElement","setSelectedElement","toolbarSettings","setToolbarSettings","fontSize","fontStyle","fontWeight","fontFamily","addTextElement","newElement","id","Date","now","text","x","y","width","height","textHistory","historyIndex","updateElement","newProps","prevElements","map","el","handleToolbarChange","key","value","prev","handleDrag","e","rect","target","getBoundingClientRect","clientX","clientY","handleResize","element","newWidth","offsetWidth","newHeight","offsetHeight","handleTextChange","textElement","newText","innerText","newHistory","slice","length","undo","newIndex","previousState","redo","nextState","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","type","find","onChange","parseInt","style","position","left","top","minWidth","minHeight","draggable","onDragStart","dataTransfer","setData","onDragEnd","onMouseUp","onDoubleClick","onBlur","contentEditable","onInput","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Text-Editor/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nfunction App() {\r\n  const [elements, setElements] = useState([]);\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n\r\n  // Default toolbar settings\r\n  const [toolbarSettings, setToolbarSettings] = useState({\r\n    fontSize: 16,\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"normal\",\r\n    fontFamily: \"Arial\",\r\n  });\r\n\r\n  const addTextElement = () => {\r\n    const newElement = {\r\n      id: Date.now(),\r\n      text: \"Double-click to edit\",\r\n      x: 100,\r\n      y: 100,\r\n      fontSize: toolbarSettings.fontSize,\r\n      fontStyle: toolbarSettings.fontStyle,\r\n      fontWeight: toolbarSettings.fontWeight,\r\n      fontFamily: toolbarSettings.fontFamily,\r\n      width: 150,\r\n      height: 30,\r\n      textHistory: [\r\n        {\r\n          text: \"Double-click to edit\",\r\n          fontSize: toolbarSettings.fontSize,\r\n          fontStyle: toolbarSettings.fontStyle,\r\n          fontWeight: toolbarSettings.fontWeight,\r\n          fontFamily: toolbarSettings.fontFamily,\r\n        },\r\n      ],\r\n      historyIndex: 0,\r\n    };\r\n    setElements([...elements, newElement]);\r\n  };\r\n\r\n  const updateElement = (id, newProps) => {\r\n    setElements((prevElements) =>\r\n      prevElements.map((el) =>\r\n        el.id === id ? { ...el, ...newProps } : el\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleToolbarChange = (key, value) => {\r\n    // Update toolbar settings\r\n    setToolbarSettings((prev) => ({\r\n      ...prev,\r\n      [key]: value,\r\n    }));\r\n\r\n    // Apply changes to the selected element if any\r\n    if (selectedElement) {\r\n      updateElement(selectedElement, { [key]: value });\r\n    }\r\n  };\r\n\r\n  const handleDrag = (id, e) => {\r\n    const rect = e.target.getBoundingClientRect();\r\n    const x = e.clientX - rect.width / 2;\r\n    const y = e.clientY - rect.height / 2;\r\n    updateElement(id, { x, y });\r\n  };\r\n\r\n  const handleResize = (id, e) => {\r\n    const element = e.target;\r\n\r\n    const newWidth = element.offsetWidth;\r\n    const newHeight = element.offsetHeight;\r\n\r\n    setElements((prevElements) =>\r\n      prevElements.map((el) =>\r\n        el.id === id ? { ...el, width: newWidth, height: newHeight } : el\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleTextChange = (id, e) => {\r\n    const textElement = e.target;\r\n    const newText = textElement.innerText;\r\n\r\n    setElements((prevElements) =>\r\n      prevElements.map((el) => {\r\n        if (el.id === id) {\r\n          const newHistory = [\r\n            ...el.textHistory.slice(0, el.historyIndex + 1),\r\n            {\r\n              text: newText,\r\n              fontSize: el.fontSize,\r\n              fontFamily: el.fontFamily,\r\n              fontStyle: el.fontStyle,\r\n              fontWeight: el.fontWeight,\r\n            },\r\n          ];\r\n          return {\r\n            ...el,\r\n            text: newText,\r\n            textHistory: newHistory,\r\n            historyIndex: newHistory.length - 1,\r\n          };\r\n        }\r\n        return el;\r\n      })\r\n    );\r\n  };\r\n\r\n  const undo = () => {\r\n    if (selectedElement !== null) {\r\n      setElements((prevElements) =>\r\n        prevElements.map((el) => {\r\n          if (el.id === selectedElement && el.historyIndex > 0) {\r\n            const newIndex = el.historyIndex - 1;\r\n            const previousState = el.textHistory[newIndex];\r\n            return {\r\n              ...el,\r\n              text: previousState.text,\r\n              fontSize: previousState.fontSize,\r\n              fontFamily: previousState.fontFamily,\r\n              fontStyle: previousState.fontStyle,\r\n              fontWeight: previousState.fontWeight,\r\n              historyIndex: newIndex,\r\n            };\r\n          }\r\n          return el;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const redo = () => {\r\n    if (selectedElement !== null) {\r\n      setElements((prevElements) =>\r\n        prevElements.map((el) => {\r\n          if (el.id === selectedElement && el.historyIndex < el.textHistory.length - 1) {\r\n            const newIndex = el.historyIndex + 1;\r\n            const nextState = el.textHistory[newIndex];\r\n            return {\r\n              ...el,\r\n              text: nextState.text,\r\n              fontSize: nextState.fontSize,\r\n              fontFamily: nextState.fontFamily,\r\n              fontStyle: nextState.fontStyle,\r\n              fontWeight: nextState.fontWeight,\r\n              historyIndex: newIndex,\r\n            };\r\n          }\r\n          return el;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor\">\r\n      <div className=\"toolbar\">\r\n        <button onClick={addTextElement}>Add Text</button>\r\n        <button onClick={undo} disabled={!selectedElement}>Undo</button>\r\n        <button onClick={redo} disabled={!selectedElement}>Redo</button>\r\n        <label>\r\n          Font Size:\r\n          <input\r\n            type=\"number\"\r\n            value={\r\n              selectedElement\r\n                ? elements.find((el) => el.id === selectedElement)?.fontSize || \"\"\r\n                : toolbarSettings.fontSize\r\n            }\r\n            onChange={(e) => handleToolbarChange(\"fontSize\", parseInt(e.target.value))}\r\n          />\r\n        </label>\r\n        <label>\r\n          Font Style:\r\n          <select\r\n            value={\r\n              selectedElement\r\n                ? elements.find((el) => el.id === selectedElement)?.fontStyle || \"\"\r\n                : toolbarSettings.fontStyle\r\n            }\r\n            onChange={(e) => handleToolbarChange(\"fontStyle\", e.target.value)}\r\n          >\r\n            <option value=\"normal\">Normal</option>\r\n            <option value=\"italic\">Italic</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Font Weight:\r\n          <select\r\n            value={\r\n              selectedElement\r\n                ? elements.find((el) => el.id === selectedElement)?.fontWeight || \"\"\r\n                : toolbarSettings.fontWeight\r\n            }\r\n            onChange={(e) => handleToolbarChange(\"fontWeight\", e.target.value)}\r\n          >\r\n            <option value=\"normal\">Normal</option>\r\n            <option value=\"bold\">Bold</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Font Family:\r\n          <select\r\n            value={\r\n              selectedElement\r\n                ? elements.find((el) => el.id === selectedElement)?.fontFamily || \"\"\r\n                : toolbarSettings.fontFamily\r\n            }\r\n            onChange={(e) => handleToolbarChange(\"fontFamily\", e.target.value)}\r\n          >\r\n            <option value=\"Arial\">Arial</option>\r\n            <option value=\"Times New Roman\">Times New Roman</option>\r\n            <option value=\"Georgia\">Georgia</option>\r\n            <option value=\"Courier New\">Courier New</option>\r\n            <option value=\"Verdana\">Verdana</option>\r\n            <option value=\"Tahoma\">Tahoma</option>\r\n            <option value=\"Comic Sans MS\">Comic Sans MS</option>\r\n            <option value=\"Cursive\">Cursive</option>\r\n            <option value=\"Monospace\">Monospace</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div className=\"canvas\">\r\n        {elements.map((el) => (\r\n          <div\r\n            key={el.id}\r\n            className={`text-element ${\r\n              selectedElement === el.id ? \"editing\" : \"\"\r\n            }`}\r\n            style={{\r\n              position: \"absolute\",\r\n              left: el.x,\r\n              top: el.y,\r\n              fontSize: el.fontSize,\r\n              fontStyle: el.fontStyle,\r\n              fontWeight: el.fontWeight,\r\n              fontFamily: el.fontFamily,\r\n              width: `${el.width}px`,\r\n              height: `${el.height}px`,\r\n              minWidth: \"150px\",\r\n              minHeight: \"30px\",\r\n            }}\r\n            draggable\r\n            onDragStart={(e) => e.dataTransfer.setData(\"text/plain\", el.id)}\r\n            onDragEnd={(e) => handleDrag(el.id, e)}\r\n            onMouseUp={(e) => handleResize(el.id, e)}\r\n            onDoubleClick={() => setSelectedElement(el.id)}\r\n            onBlur={() => setSelectedElement(null)}\r\n            contentEditable={selectedElement === el.id}\r\n            onInput={(e) => handleTextChange(el.id, e)}\r\n          >\r\n            {el.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,cAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,eAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACA,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC;IACrDe,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE,QAAQ;IACpBC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,UAAU,GAAG;MACjBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAE,sBAAsB;MAC5BC,CAAC,EAAE,GAAG;MACNC,CAAC,EAAE,GAAG;MACNX,QAAQ,EAAEF,eAAe,CAACE,QAAQ;MAClCC,SAAS,EAAEH,eAAe,CAACG,SAAS;MACpCC,UAAU,EAAEJ,eAAe,CAACI,UAAU;MACtCC,UAAU,EAAEL,eAAe,CAACK,UAAU;MACtCS,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE,CACX;QACEL,IAAI,EAAE,sBAAsB;QAC5BT,QAAQ,EAAEF,eAAe,CAACE,QAAQ;QAClCC,SAAS,EAAEH,eAAe,CAACG,SAAS;QACpCC,UAAU,EAAEJ,eAAe,CAACI,UAAU;QACtCC,UAAU,EAAEL,eAAe,CAACK;MAC9B,CAAC,CACF;MACDY,YAAY,EAAE;IAChB,CAAC;IACDpB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEW,UAAU,CAAC,CAAC;EACxC,CAAC;EAED,MAAMW,aAAa,GAAGA,CAACV,EAAE,EAAEW,QAAQ,KAAK;IACtCtB,WAAW,CAAEuB,YAAY,IACvBA,YAAY,CAACC,GAAG,CAAEC,EAAE,IAClBA,EAAE,CAACd,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGc,EAAE;MAAE,GAAGH;IAAS,CAAC,GAAGG,EAC1C,CACF,CAAC;EACH,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;IAC1C;IACAxB,kBAAkB,CAAEyB,IAAI,KAAM;MAC5B,GAAGA,IAAI;MACP,CAACF,GAAG,GAAGC;IACT,CAAC,CAAC,CAAC;;IAEH;IACA,IAAI3B,eAAe,EAAE;MACnBoB,aAAa,CAACpB,eAAe,EAAE;QAAE,CAAC0B,GAAG,GAAGC;MAAM,CAAC,CAAC;IAClD;EACF,CAAC;EAED,MAAME,UAAU,GAAGA,CAACnB,EAAE,EAAEoB,CAAC,KAAK;IAC5B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,qBAAqB,CAAC,CAAC;IAC7C,MAAMnB,CAAC,GAAGgB,CAAC,CAACI,OAAO,GAAGH,IAAI,CAACf,KAAK,GAAG,CAAC;IACpC,MAAMD,CAAC,GAAGe,CAAC,CAACK,OAAO,GAAGJ,IAAI,CAACd,MAAM,GAAG,CAAC;IACrCG,aAAa,CAACV,EAAE,EAAE;MAAEI,CAAC;MAAEC;IAAE,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMqB,YAAY,GAAGA,CAAC1B,EAAE,EAAEoB,CAAC,KAAK;IAC9B,MAAMO,OAAO,GAAGP,CAAC,CAACE,MAAM;IAExB,MAAMM,QAAQ,GAAGD,OAAO,CAACE,WAAW;IACpC,MAAMC,SAAS,GAAGH,OAAO,CAACI,YAAY;IAEtC1C,WAAW,CAAEuB,YAAY,IACvBA,YAAY,CAACC,GAAG,CAAEC,EAAE,IAClBA,EAAE,CAACd,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGc,EAAE;MAAER,KAAK,EAAEsB,QAAQ;MAAErB,MAAM,EAAEuB;IAAU,CAAC,GAAGhB,EACjE,CACF,CAAC;EACH,CAAC;EAED,MAAMkB,gBAAgB,GAAGA,CAAChC,EAAE,EAAEoB,CAAC,KAAK;IAClC,MAAMa,WAAW,GAAGb,CAAC,CAACE,MAAM;IAC5B,MAAMY,OAAO,GAAGD,WAAW,CAACE,SAAS;IAErC9C,WAAW,CAAEuB,YAAY,IACvBA,YAAY,CAACC,GAAG,CAAEC,EAAE,IAAK;MACvB,IAAIA,EAAE,CAACd,EAAE,KAAKA,EAAE,EAAE;QAChB,MAAMoC,UAAU,GAAG,CACjB,GAAGtB,EAAE,CAACN,WAAW,CAAC6B,KAAK,CAAC,CAAC,EAAEvB,EAAE,CAACL,YAAY,GAAG,CAAC,CAAC,EAC/C;UACEN,IAAI,EAAE+B,OAAO;UACbxC,QAAQ,EAAEoB,EAAE,CAACpB,QAAQ;UACrBG,UAAU,EAAEiB,EAAE,CAACjB,UAAU;UACzBF,SAAS,EAAEmB,EAAE,CAACnB,SAAS;UACvBC,UAAU,EAAEkB,EAAE,CAAClB;QACjB,CAAC,CACF;QACD,OAAO;UACL,GAAGkB,EAAE;UACLX,IAAI,EAAE+B,OAAO;UACb1B,WAAW,EAAE4B,UAAU;UACvB3B,YAAY,EAAE2B,UAAU,CAACE,MAAM,GAAG;QACpC,CAAC;MACH;MACA,OAAOxB,EAAE;IACX,CAAC,CACH,CAAC;EACH,CAAC;EAED,MAAMyB,IAAI,GAAGA,CAAA,KAAM;IACjB,IAAIjD,eAAe,KAAK,IAAI,EAAE;MAC5BD,WAAW,CAAEuB,YAAY,IACvBA,YAAY,CAACC,GAAG,CAAEC,EAAE,IAAK;QACvB,IAAIA,EAAE,CAACd,EAAE,KAAKV,eAAe,IAAIwB,EAAE,CAACL,YAAY,GAAG,CAAC,EAAE;UACpD,MAAM+B,QAAQ,GAAG1B,EAAE,CAACL,YAAY,GAAG,CAAC;UACpC,MAAMgC,aAAa,GAAG3B,EAAE,CAACN,WAAW,CAACgC,QAAQ,CAAC;UAC9C,OAAO;YACL,GAAG1B,EAAE;YACLX,IAAI,EAAEsC,aAAa,CAACtC,IAAI;YACxBT,QAAQ,EAAE+C,aAAa,CAAC/C,QAAQ;YAChCG,UAAU,EAAE4C,aAAa,CAAC5C,UAAU;YACpCF,SAAS,EAAE8C,aAAa,CAAC9C,SAAS;YAClCC,UAAU,EAAE6C,aAAa,CAAC7C,UAAU;YACpCa,YAAY,EAAE+B;UAChB,CAAC;QACH;QACA,OAAO1B,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;EAED,MAAM4B,IAAI,GAAGA,CAAA,KAAM;IACjB,IAAIpD,eAAe,KAAK,IAAI,EAAE;MAC5BD,WAAW,CAAEuB,YAAY,IACvBA,YAAY,CAACC,GAAG,CAAEC,EAAE,IAAK;QACvB,IAAIA,EAAE,CAACd,EAAE,KAAKV,eAAe,IAAIwB,EAAE,CAACL,YAAY,GAAGK,EAAE,CAACN,WAAW,CAAC8B,MAAM,GAAG,CAAC,EAAE;UAC5E,MAAME,QAAQ,GAAG1B,EAAE,CAACL,YAAY,GAAG,CAAC;UACpC,MAAMkC,SAAS,GAAG7B,EAAE,CAACN,WAAW,CAACgC,QAAQ,CAAC;UAC1C,OAAO;YACL,GAAG1B,EAAE;YACLX,IAAI,EAAEwC,SAAS,CAACxC,IAAI;YACpBT,QAAQ,EAAEiD,SAAS,CAACjD,QAAQ;YAC5BG,UAAU,EAAE8C,SAAS,CAAC9C,UAAU;YAChCF,SAAS,EAAEgD,SAAS,CAAChD,SAAS;YAC9BC,UAAU,EAAE+C,SAAS,CAAC/C,UAAU;YAChCa,YAAY,EAAE+B;UAChB,CAAC;QACH;QACA,OAAO1B,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;EAED,oBACEjC,OAAA;IAAK+D,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBhE,OAAA;MAAK+D,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBhE,OAAA;QAAQiE,OAAO,EAAEhD,cAAe;QAAA+C,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClDrE,OAAA;QAAQiE,OAAO,EAAEP,IAAK;QAACY,QAAQ,EAAE,CAAC7D,eAAgB;QAAAuD,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChErE,OAAA;QAAQiE,OAAO,EAAEJ,IAAK;QAACS,QAAQ,EAAE,CAAC7D,eAAgB;QAAAuD,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChErE,OAAA;QAAAgE,QAAA,GAAO,YAEL,eAAAhE,OAAA;UACEuE,IAAI,EAAC,QAAQ;UACbnC,KAAK,EACH3B,eAAe,GACX,EAAAN,cAAA,GAAAI,QAAQ,CAACiE,IAAI,CAAEvC,EAAE,IAAKA,EAAE,CAACd,EAAE,KAAKV,eAAe,CAAC,cAAAN,cAAA,uBAAhDA,cAAA,CAAkDU,QAAQ,KAAI,EAAE,GAChEF,eAAe,CAACE,QACrB;UACD4D,QAAQ,EAAGlC,CAAC,IAAKL,mBAAmB,CAAC,UAAU,EAAEwC,QAAQ,CAACnC,CAAC,CAACE,MAAM,CAACL,KAAK,CAAC;QAAE;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRrE,OAAA;QAAAgE,QAAA,GAAO,aAEL,eAAAhE,OAAA;UACEoC,KAAK,EACH3B,eAAe,GACX,EAAAL,eAAA,GAAAG,QAAQ,CAACiE,IAAI,CAAEvC,EAAE,IAAKA,EAAE,CAACd,EAAE,KAAKV,eAAe,CAAC,cAAAL,eAAA,uBAAhDA,eAAA,CAAkDU,SAAS,KAAI,EAAE,GACjEH,eAAe,CAACG,SACrB;UACD2D,QAAQ,EAAGlC,CAAC,IAAKL,mBAAmB,CAAC,WAAW,EAAEK,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;UAAA4B,QAAA,gBAElEhE,OAAA;YAAQoC,KAAK,EAAC,QAAQ;YAAA4B,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCrE,OAAA;YAAQoC,KAAK,EAAC,QAAQ;YAAA4B,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACRrE,OAAA;QAAAgE,QAAA,GAAO,cAEL,eAAAhE,OAAA;UACEoC,KAAK,EACH3B,eAAe,GACX,EAAAJ,eAAA,GAAAE,QAAQ,CAACiE,IAAI,CAAEvC,EAAE,IAAKA,EAAE,CAACd,EAAE,KAAKV,eAAe,CAAC,cAAAJ,eAAA,uBAAhDA,eAAA,CAAkDU,UAAU,KAAI,EAAE,GAClEJ,eAAe,CAACI,UACrB;UACD0D,QAAQ,EAAGlC,CAAC,IAAKL,mBAAmB,CAAC,YAAY,EAAEK,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;UAAA4B,QAAA,gBAEnEhE,OAAA;YAAQoC,KAAK,EAAC,QAAQ;YAAA4B,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCrE,OAAA;YAAQoC,KAAK,EAAC,MAAM;YAAA4B,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACRrE,OAAA;QAAAgE,QAAA,GAAO,cAEL,eAAAhE,OAAA;UACEoC,KAAK,EACH3B,eAAe,GACX,EAAAH,eAAA,GAAAC,QAAQ,CAACiE,IAAI,CAAEvC,EAAE,IAAKA,EAAE,CAACd,EAAE,KAAKV,eAAe,CAAC,cAAAH,eAAA,uBAAhDA,eAAA,CAAkDU,UAAU,KAAI,EAAE,GAClEL,eAAe,CAACK,UACrB;UACDyD,QAAQ,EAAGlC,CAAC,IAAKL,mBAAmB,CAAC,YAAY,EAAEK,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;UAAA4B,QAAA,gBAEnEhE,OAAA;YAAQoC,KAAK,EAAC,OAAO;YAAA4B,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpCrE,OAAA;YAAQoC,KAAK,EAAC,iBAAiB;YAAA4B,QAAA,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxDrE,OAAA;YAAQoC,KAAK,EAAC,SAAS;YAAA4B,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxCrE,OAAA;YAAQoC,KAAK,EAAC,aAAa;YAAA4B,QAAA,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChDrE,OAAA;YAAQoC,KAAK,EAAC,SAAS;YAAA4B,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxCrE,OAAA;YAAQoC,KAAK,EAAC,QAAQ;YAAA4B,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCrE,OAAA;YAAQoC,KAAK,EAAC,eAAe;YAAA4B,QAAA,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpDrE,OAAA;YAAQoC,KAAK,EAAC,SAAS;YAAA4B,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxCrE,OAAA;YAAQoC,KAAK,EAAC,WAAW;YAAA4B,QAAA,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNrE,OAAA;MAAK+D,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpBzD,QAAQ,CAACyB,GAAG,CAAEC,EAAE,iBACfjC,OAAA;QAEE+D,SAAS,EAAE,gBACTtD,eAAe,KAAKwB,EAAE,CAACd,EAAE,GAAG,SAAS,GAAG,EAAE,EACzC;QACHwD,KAAK,EAAE;UACLC,QAAQ,EAAE,UAAU;UACpBC,IAAI,EAAE5C,EAAE,CAACV,CAAC;UACVuD,GAAG,EAAE7C,EAAE,CAACT,CAAC;UACTX,QAAQ,EAAEoB,EAAE,CAACpB,QAAQ;UACrBC,SAAS,EAAEmB,EAAE,CAACnB,SAAS;UACvBC,UAAU,EAAEkB,EAAE,CAAClB,UAAU;UACzBC,UAAU,EAAEiB,EAAE,CAACjB,UAAU;UACzBS,KAAK,EAAE,GAAGQ,EAAE,CAACR,KAAK,IAAI;UACtBC,MAAM,EAAE,GAAGO,EAAE,CAACP,MAAM,IAAI;UACxBqD,QAAQ,EAAE,OAAO;UACjBC,SAAS,EAAE;QACb,CAAE;QACFC,SAAS;QACTC,WAAW,EAAG3C,CAAC,IAAKA,CAAC,CAAC4C,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEnD,EAAE,CAACd,EAAE,CAAE;QAChEkE,SAAS,EAAG9C,CAAC,IAAKD,UAAU,CAACL,EAAE,CAACd,EAAE,EAAEoB,CAAC,CAAE;QACvC+C,SAAS,EAAG/C,CAAC,IAAKM,YAAY,CAACZ,EAAE,CAACd,EAAE,EAAEoB,CAAC,CAAE;QACzCgD,aAAa,EAAEA,CAAA,KAAM7E,kBAAkB,CAACuB,EAAE,CAACd,EAAE,CAAE;QAC/CqE,MAAM,EAAEA,CAAA,KAAM9E,kBAAkB,CAAC,IAAI,CAAE;QACvC+E,eAAe,EAAEhF,eAAe,KAAKwB,EAAE,CAACd,EAAG;QAC3CuE,OAAO,EAAGnD,CAAC,IAAKY,gBAAgB,CAAClB,EAAE,CAACd,EAAE,EAAEoB,CAAC,CAAE;QAAAyB,QAAA,EAE1C/B,EAAE,CAACX;MAAI,GA1BHW,EAAE,CAACd,EAAE;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA2BP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnE,EAAA,CAjQQD,GAAG;AAAA0F,EAAA,GAAH1F,GAAG;AAmQZ,eAAeA,GAAG;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}